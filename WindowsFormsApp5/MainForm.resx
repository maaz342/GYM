<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ooooCiiigKKKKD//2Q==
</value>
  </data>
</root>